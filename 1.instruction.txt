1. In the "database file" folder, there is a database file that must be uploaded to XAMPP.
2. The project contains a portfolio and a shop.
You can start viewing the project from the portfolio and from there you can continue further to see
shop-in. If you start from the wallet, follow this url (http://localhost/Project1/index.html)
and to continue to see the shop, go to the portfolio menu - the 'projects' option.
If you want to see the shop separately, url(http://localhost/Project1/shop_index.php).
Apart from the PC version, the project is also suitable in these dimensions:
(mobile version < 600px(max), 601(min), 768px(min), 992px(min), 1200px(min)).
- The shop shows all my knowledge regarding WEB DEV.
*The name of the shop is 'JoyBoy'.
In the project, only something does not work, which is the "search bar" in this "index.html" file, for reasons as I mentioned above.
this project was made with the intention to include all my knowledge, and this file was at first another mini project
which was a photo gallery and when the photo was clicked, the original version or size of the photo was opened, and the "search bar" then has
it was just for looks, and all the photos are loaded as background img and not with database, and when I thought to include it in the project
as the first page of the shop, I made all the necessary changes except for the "search bar" because if I had to change that too, I had to change everything
system of the site and I decided to leave it as it is in order to preserve the idea of ​​the project that was, that is, a photo gallery.
The shop is built with the idea of ​​selling movies online, the first page simply contains information for the user to let him know,
the user can see some of the films that the shop contains and some information about it. If the user decides to buy a movie, he must create it
an account on the website. Where can I go to "signup", and create his account. I also included 'some security' in it
"signup" and "login" system, which are:
1. regarding "signup":
- the user is only allowed letters and spaces when filling in his data,
- the user cannot advance further by leaving 'empty inputs',
- it is checked if the email is invalid,
- it is checked if a user with the same first and last name is registered at the same time,
- it is also checked if the email is registered.
2. regarding "login":
- the user cannot advance further by leaving 'empty inputs',
-wrong email,
-wrong password.
These errors are not displayed on the website because we must give the user as little information as possible for security reasons.
but if you want to be seen on the website, go to the "signup.php" file to remove the comment and leave it in a normal state
call the function also in "signup_view.php" remove the comment from the function itself, and then you can test it
on the website, and if you make an error, they will appear in the form of an "alert", you can do the same with "login.php" & "login_view.php".
In "signup.php" I made it possible that if the user makes a mistake during registration, the name and surname remain
and don't write the first and last name again when filling out to register, *but only the first and last name and *only in "signup".
After registration and after logging in, on the user's "profile.php" page, there will initially be no product for the reason that you have to go
at url(http://localhost/Project1/admin_login.php) or url(http://localhost/Project1/admin_signup.php), this is the admin page that
controls everything regarding the shop, the registration and logging system, it works in the same way as the user and as far as
regarding 'security'. On the admin page you should go to 'products' and there you should upload all the products from the folder "upload_img_products",
and you can set the product name and price. Then it appears to the user, where you can upload as many products as you want, or you
change the name of a product or delete a product. Also, the name of the product that you will decide will serve and for how much
It concerns the "search bar" inside the user's page, which in this case works, because everything is loaded in the database and you can search.
a fixed product with the name assigned to it. On the user's page, as soon as the products appear after uploading by the admin, you can select
how many products you need and they go directly to the 'shop card', after you finish the selection, click on the menu on the top right and go to 'cart',
there you can delete all the selected products or continue again by selecting the main page or you can continue with 'checkout'.
In the checkout you will find all the information about what the user decided to buy, and he needs to fill in the data to continue.
In filling out the data again there is 'security':
- only letters, numbers and spaces are allowed,
-empty inputs are not allowed,
- it is checked if it is the correct user name,
- it is checked if it is the correct email of the user,
and if the email is invalid or not.
Do the same to test the errors: "checkout.php" & "checkout_view.php".
After successfully completing the data, the order has been sent to the admin, and to the user the order will be in "pending" status.
In the 'orders' admin, there you can perform the necessary actions, such as making the status of the order "completed" and this is where the idea of ​​buying and selling ends, the same thing
it will be shown to the user,... or to delete a user's account or to see the messages sent by the user.
The admin also has a "dashboard", which contains all the necessary information regarding the shop.
In both cases, both for the user and for the admin, the user can change the name or password of the account, which are then changed and
in the database and I can also delete his account.
Regarding messages, the user cannot send messages without creating an account first, and this can be tested in "index.html".
There is also "security" here:
- only letters, numbers and spaces are allowed,
-empty inputs are not allowed,
-correct email,
and it is checked if the user's email is invalid.

I have also set security and for the "session", I have set the regeneration of the session id with a time of 30 min, and in a few words
session id will be regenerated every 30 min and this will cause the user account to log out automatically,
and the user must log in again. file "config_session.php".


*A summary of my skills:
I worked on HTML, CSS, PHP, database creation and the connection to the website myself, as for JavaScript, I know the basics of the language, but I also needed the help of the Internet.
to create the ideas I had.
As for WordPress, I have worked on different websites, such as a website starting from scratch and I have built the entire website, but also with ready-made templates and
then modifying them.
